" Install vim-plug if not installed already
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'ap/vim-buftabline'

Plug 'Glench/Vim-Jinja2-Syntax'

" Automatically clears search highlight
Plug 'pgdouyon/vim-evanesco'

" Low-contrast Vim color scheme based on Seoul Colors
Plug 'junegunn/seoul256.vim'

" Colorscheme Retro groove color scheme for Vim
Plug 'morhetz/gruvbox'

" This is vim script support expanding abbreviation like emmet.
" ref: http://emmet.io/
" Emmet is a plugin for many popular text editors which greatly improves HTML
" & CSS workflow
Plug 'mattn/emmet-vim'

" Add additional support for Ansible in VIM
Plug 'chase/vim-ansible-yaml'

" A light and configurable statusline/tabline plugin for Vim
Plug 'itchyny/lightline.vim'

" vim match-up: even better % navigate and highlight matching words modern matchit and matchparen replacement
Plug 'andymass/vim-matchup'

" Go development plugin for \im https://github.com/fatih/vim-go
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" toggle comments
Plug 'tpope/vim-commentary'

" Initialize plugin system
call plug#end()


"syntax off
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hlsearch		" highlight search results
set showmatch                   " automatically show matching brackets. works like it does in bbedit.
set ruler                       " show the cursor position all the time
set backspace=indent,eol,start  " make that backspace key work the way it should
"set cursorline			" highlight line under cursor
"set autowrite		" Automatically save before commands like :next and :make
set hidden		" Any buffer can be hidden (keeping its changes) without first writing the buffer to a file
set wildmenu			" :help wildmenu command-line completion operates in an enhanced mode.
set wildmode=longest:list,full	" formatting of wildmenu
" silent! colorscheme seoul256 " set colorscheme if exists
silent! colorscheme gruvbox  " set colorscheme if exists
set background=dark
set mouse=a   " enable mouse scrolling

" Show EOL type and last modified timestamp, right after the filename
"set statusline=%<%F%h%m%r\ [%{&ff}]\ (%{strftime(\"%H:%M\ %d/%m/%Y\",getftime(expand(\"%:p\")))})%=%l,%c%V\ %P
"set laststatus=2                " make the last line where the status is two lines deep so you can see status always

" move among buffers with CTRL N(ext) or P(revious)
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>

" vim-go
" autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <C-X>  <Plug>(go-run)

" vim-commentary
" [CTRL]+[LSHIFT]+[_] works for line and visual block comments
noremap <C-_> :Commentary<cr>
" My favorite file type isn't supported!
" Relax! You just have to adjust commentstring
" autocmd FileType apache setlocal commentstring=#\ %s
